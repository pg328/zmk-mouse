/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        space {
            bindings = <&kp SPACE>;
            key-positions = <38 39>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <10 25 40 37>;
            layers = <1 2 3>;
        };

        caps_word {
            bindings = <&caps_word>;
            key-positions = <1 2 3>;
        };
    };

    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q           &kp W  &kp E           &kp R  &kp T                       &kp Y                  &kp U  &kp I         &kp O             &kp P     &none
&none  &kp A           &kp S  &kp D           &kp F  &kp G                       &kp H                  &kp J  &kp K         &kp L             &kp SEMI  &none
&none  &kp LEFT_SHIFT  &kp Z  &kp X           &kp C  &kp V                       &kp B                  &kp N  &kp M         &mt COMMA PERIOD  &kp FSLH  &none
                              &kp LEFT_SHIFT  &mo 2  &hold_tap LGUI BACKSPACE    &hold_tap LCTRL SPACE  &mo 1  &kp LEFT_ALT
            >;

            label = "Layer 1";
        };

        num_sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp ESCAPE      &kp LEFT_PARENTHESIS  &kp DOUBLE_QUOTES  &kp RIGHT_PARENTHESIS  &kp NON_US_HASH         &kp EQUAL  &kp N7                   &kp N8  &kp N9  &kp BACKSPACE  &none
&none  &kp TAB         &mt LEFT_BRACE COMMA  &kp SINGLE_QUOTE   &mt RIGHT_BRACE DOT    &kp PIPE                &kp N0     &mt LS(LG(NUMBER_4)) N4  &kp N5  &kp N6  &kp ENTER      &none
&none  &kp LEFT_SHIFT  &kp LEFT_BRACKET      &kp GRAVE          &kp RIGHT_BRACKET      &kp NON_US_BACKSLASH    &kp MINUS  &kp NUMBER_1             &kp N2  &kp N3  &kp RSHFT      &none
                                             &kp LSHFT          &mo 3                  &trans                  &trans     &none                    &none
            >;

            label = "Numbers and Symbols";
        };

        nav_media {
            bindings = <
&none  &kp ESC         &kp C_PREV            &kp C_PLAY_PAUSE  &kp C_NEXT            &bl BL_INC    &kp HOME            &kp PAGE_DOWN    &kp PG_UP     &kp END              &kp BACKSPACE    &none
&none  &kp TAB         &kp C_VOLUME_DOWN     &kp C_MUTE        &kp C_VOLUME_UP       &bl BL_TOG    &kp LEFT            &kp DOWN         &kp UP_ARROW  &kp RIGHT            &kp RET          &none
&none  &kp LEFT_SHIFT  &kp C_BRIGHTNESS_DEC  &kp LG(LCTRL)     &kp C_BRIGHTNESS_INC  &bl BL_DEC    &kp LA(LEFT_ARROW)  &kp LS(LC(TAB))  &kp LC(TAB)   &kp LA(RIGHT_ARROW)  &kp RIGHT_SHIFT  &none
                                             &kp LSHFT         &none                 &trans        &trans              &mo 3            &none
            >;

            label = "Navigation And Media";
        };

        fn {
            bindings = <
&none  &none         &bt BT_PRV    &bt BT_CLR    &bt BT_NXT    &none           &kp F12  &kp F7  &kp F8  &kp F9  &kp DEL    &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp F10  &kp F4  &kp F5  &kp F6  &kp ENTER  &none
&none  &none         &none         &none         &mo 4         &none           &kp F11  &kp F1  &kp F2  &kp F3  &kp RSHFT  &none
                                   &trans        &none         &trans          &trans   &none   &none
            >;

            label = "Functions and System";
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &mwh SCROLL_LEFT  &mwh SCROLL_DOWN  &mwh SCROLL_UP  &mwh SCROLL_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_UP    &mmv MOVE_RIGHT    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mkp MB1          &mkp MB2          &mkp MB3        &trans             &trans  &trans
                        &trans  &trans  &trans    &trans            &trans            &trans
            >;

            label = "Mouse";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };
};
