/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        caps_word {
            bindings = <&caps_word>;
            key-positions = <2 3 4>;
        };
    };

    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            flavor = "tap-preferred";
        };

        dot_comma: dot_comma {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COMMA";
            bindings = <&kp PERIOD>, <&kp LA(COMMA)>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        comma_lbrace: comma_lbrace {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_LBRACE";
            bindings = <&kp COMMA>, <&kp LEFT_BRACE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_rbrace: dot_rbrace {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_RBRACE";
            bindings = <&kp PERIOD>, <&kp RBRC>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shift_up_for_scroll: shift_up_for_scroll {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_UP_FOR_SCROLL";
            bindings = <&kp UP_ARROW>, <&mwh SCROLL_UP>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        shift_down_for_scroll: shift_down_for_scroll {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_DOWN_FOR_SCROLL";
            bindings = <&kp DOWN>, <&mwh SCROLL_DOWN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        mouse_mod_tap: mouse_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MOUSE_MOD_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            flavor = "tap-preferred";
        };

        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            flavor = "tap-preferred";
        };

        lparen_lbracket: lparen_lbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAREN_LBRACKET";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LEFT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rparen_rbracket: rparen_rbracket {
            compatible = "zmk,behavior-mod-morph";
            label = "RPAREN_RBRACKET";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        alpha {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q           &kp W  &kp E           &kp R  &kp T                    &kp Y                 &kp U  &kp I         &kp O       &kp P                  &none
&none  &kp A           &kp S  &kp D           &kp F  &kp G                    &kp H                 &kp J  &kp K         &kp L       &kp SEMI               &none
&none  &kp LEFT_SHIFT  &kp Z  &kp X           &kp C  &kp V                    &kp B                 &kp N  &kp M         &dot_comma  &mouse_mod_tap 4 FSLH  &none
                              &kp LEFT_SHIFT  &mo 1  &hold_tap LCTRL SPACE    &hold_tap LGUI SPACE  &mo 2  &kp LEFT_ALT
            >;

            label = "Layer 1";
        };

        num_sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp ESCAPE      &lparen_lbracket  &kp DOUBLE_QUOTES  &rparen_rbracket   &kp NON_US_HASH         &kp EQUAL  &kp N1  &kp N2  &kp N3  &kp DELETE  &none
&none  &kp TAB         &comma_lbrace     &kp SINGLE_QUOTE   &dot_rbrace        &kp PIPE                &kp MINUS  &kp N4  &kp N5  &kp N6  &kp ENTER   &none
&none  &kp LEFT_SHIFT  &kp LEFT_BRACKET  &kp GRAVE          &kp RIGHT_BRACKET  &kp NON_US_BACKSLASH    &kp N0     &kp N7  &kp N8  &kp N9  &trans      &none
                                         &trans             &none              &trans                  &trans     &mo 3   &kp N0
            >;

            label = "Numbers and Symbols";
        };

        nav_media {
            bindings = <
&none  &kp ESC         &kp C_PREV            &kp C_PLAY_PAUSE  &kp C_NEXT            &bl BL_INC    &kp HOME            &kp PAGE_DOWN           &kp PG_UP             &kp END              &kp BACKSPACE  &none
&none  &kp TAB         &kp C_VOLUME_DOWN     &kp C_MUTE        &kp C_VOLUME_UP       &bl BL_TOG    &kp LEFT            &shift_down_for_scroll  &shift_up_for_scroll  &kp RIGHT            &kp RET        &none
&none  &kp LEFT_SHIFT  &kp C_BRIGHTNESS_DEC  &kp LG(LCTRL)     &kp C_BRIGHTNESS_INC  &bl BL_DEC    &kp LA(LEFT_ARROW)  &kp LS(LC(TAB))         &kp LC(TAB)           &kp LA(RIGHT_ARROW)  &trans         &none
                                             &kp LSHFT         &mo 3                 &trans        &trans              &none                   &kp LEFT_ALT
            >;

            label = "Navigation And Media";
        };

        fn {
            bindings = <
&none  &none         &bt BT_PRV    &bt BT_CLR    &bt BT_NXT    &none           &kp F12  &kp F7  &kp F8        &kp F9  &kp BACKSPACE  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp F10  &kp F4  &kp F5        &kp F6  &kp ENTER      &none
&none  &none         &none         &none         &none         &none           &kp F11  &kp F1  &kp F2        &kp F3  &trans         &none
                                   &trans        &trans        &trans          &trans   &trans  &kp LEFT_ALT
            >;

            label = "Functions and System";
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &mwh SCROLL_LEFT  &mwh SCROLL_DOWN  &mwh SCROLL_UP  &mwh SCROLL_RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &mmv MOVE_LEFT    &mmv MOVE_DOWN    &mmv MOVE_UP    &mmv MOVE_RIGHT    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp ESCAPE        &mkp MB1          &mkp MB2        &mkp MB3           &trans  &trans
                        &trans  &trans  &trans    &trans            &trans            &trans
            >;

            label = "Mouse";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
    };
};
